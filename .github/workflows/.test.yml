on:
  workflow_call:
    inputs:
      packages:
        description: Comma-separated list of package ids
        required: true
        type: string

jobs:
  build:
    name: Test package updates
    runs-on: windows-latest
    timeout-minutes: 20

    env:
      # Set au version to use or omit to use the latest. Specify branch name to use development version from Github
      au_version: master

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install AU
        run: |
          git clone -q https://github.com/majkinetor/au.git $Env:TEMP/au
          . "$Env:TEMP/au/scripts/Install-AU.ps1" $Env:au_version

      - name: Install chocolatey-core.extension # required for several packages
        run: choco install -y chocolatey-core.extension

      - name: Test package updates
        id: updates
        run: |
          $arguments = @{
            Name = $Env:package_scope -replace ' ','' -split ','
          }
          [array] $packages = ./test_all.ps1 @arguments -ThrowOnErrors -PassThru -UpdatesOnly | ForEach-Object {
            $_ | ConvertTo-Json -Compress
          }
          $packages = ConvertTo-Json $packages -Compress
          "Packages = $packages"
          "packages=$packages" >> $Env:GITHUB_OUTPUT
        env:
          package_scope: ${{ inputs.packages }}
          au_nogist: true
          github_user_repo: ${{ github.repository }}
          github_api_key: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish report
        if: always() && hashFiles('Update-AUPackages.md', 'Update-Force-Test*.md')
        run: Get-Content 'Update-AUPackages.md', 'Update-Force-Test*.md' -ErrorAction SilentlyContinue >> $Env:GITHUB_STEP_SUMMARY

      - name: Prepare Packages artifact
        if: always() && hashFiles('**/*.nupkg')
        run: |
          New-Item Packages -ItemType Directory
          Get-ChildItem *.nupkg -Recurse | Move-Item -Destination Packages

      - name: Upload Packages artifact
        if: always() && hashFiles('Packages/*.nupkg')
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Packages
          path: Packages/*.nupkg

    outputs:
      updates: ${{ steps.updates.outputs.packages }}

  test:
    name: Test packages
    needs: build

    uses: ./.github/workflows/.test-packages.yml
    with:
      updates: ${{ needs.build.outputs.updates }}
