<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>id</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>0.0.0</version>
    <title>Title</title>
    <authors>Authors</authors>
    <owners>Thilas</owners>
    <licenseUrl>http://license-url</licenseUrl>
    <projectUrl>http://project-url</projectUrl>
    <iconUrl>https://cdn.jsdelivr.net/gh/Thilas/chocolatey-packages@commit/id/icon.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Description using MarkDown</description>
    <summary>Summary</summary>
    <releaseNotes>[Release Notes](https://release-notes)</releaseNotes>
    <copyright>Copyright © Author</copyright>
    <tags>id admin tags</tags>
    <!--
      foss            for all free and open source packages
      cross-platform  for all packages available on other platforms then Windows
      freeware        for all freeware but not open source packages
      trial           for all propriatery commercial tools that require license
      cli             for all command line tools
      games           for all games
    -->
    <projectSourceUrl>http://project-source-url</projectSourceUrl>
    <packageSourceUrl>https://github.com/Thilas/chocolatey-packages/tree/master/id</packageSourceUrl>
    <docsUrl>http://docs-url</docsUrl>
    <mailingListUrl>http://mailing-list-url</mailingListUrl>
    <bugTrackerUrl>http://bug-tracker-url</bugTrackerUrl>
    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <!-- chocolatey-core.extension - If supporting 0.9.9.x (or below) and including a chocolateyUninstall.ps1 file to uninstall an EXE/MSI, you probably want to include chocolatey-core.extension as a dependency. Please verify whether you are using a helper function from that package. -->
      <dependency id="chocolatey-core.extension" />
    </dependencies>
  </metadata>
  <files>
    <file src="legal\**" target="legal" />
    <file src="tools\**" target="tools" exclude="**\*.Tests.ps1" />
  </files>
</package>
